openapi: 3.0.0
info:
  version: 1.0.0
  title: My Company API
  description: Esta API permite obtener la información de los empleados.
  termsOfService: https://mycompany.com/terms
  contact:
    name: Edgard Marquez
    url: https://edgardma.com
    email: edgardma@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  
servers: 
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/EDGARDMA_1/MyCompanyAPI/1.0.0
  - url: https://www.google.comn/api
    description: Google Server
  - url: https://www.facebook.com/api
    description: Facebook Server

paths:
  /employees:
    get: 
      description: Permite obtener lista de empleados según los parámetros o condiciones
      parameters: 
      - in: query
        name: id
        required: false
        description: Código del empleado
        schema:
          type: number
          example: 456
          
      - in: query
        name: sueldo
        required: true
        description: Sueldo del empleado
        schema:
          type: number
          example: 2000
      
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      example: 465
                    nombre:
                      type: string
                      example: Perico Los Palotes
                    sueldo:
                      type: number
                      format: float
                      example: 20000
        404:
          description: Request not found
          content:
            application/json:
              schema:
                type: string
                example: {"message":"Error. Page or Requezt not found."}
    
    post:
      description: Permite crear empleados en la base de datos
      parameters: 
        - name: employee
          in: query
          description: Crear un nuevo empleado en la base de datos
          schema:
            type: object
            properties:
              nombre:
                type: string
                description: Primer nombre
                example: 'Edgard'
              id:
                type: number
                description: ID de empleado
                example: 321
              email:
                type: string
                description: Correo electronico del empleado
                example: 'emarquez@gmail.com'
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                type: string
                example: {"Message": "ok"}
            application/xml:
              schema:
                $ref: '#/components/schemas/Message'
                  
            text/plain:
              schema:
                type: string
                example: ok
    
  /employees/{id}:
    get: 
      description: Obtener información de un empleado ingresando su ID
      parameters: 
      - in: path
        name: id
        required: true
        description: Código del empleado
        schema:
          type: number
          example: 456
      
      responses:
        200:
          description: Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      example: 465
                    nombre:
                      type: string
                      example: Perico Los Palotes
                    sueldo:
                      type: number
                      format: float
                      example: 20000
        404:
          description: Request not found
          content:
            application/json:
              schema:
                type: string
                example: {"message":"Error. Page or Requezt not found."}
                
components:
  schemas:
    Message: 
      type: object
      xml: 
        name: Message
      properties:
        Mensaje:
          type: string
          example: OK